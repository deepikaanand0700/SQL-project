/* Q1: Who is the senior most employee based on job title? */

SELECT * FROM employeeORDER BY levels DESC LIMIT 1

/* Q2: Which countries have the most Invoices? */

select billing_country , count(customer_id) as cusromers_count_ from `Music_store_analysis.invoice` group by billing_country order by cusromers_count_ desc 

/* Q3: What are top 3 values of total invoice? */

select total from `Music_store_analysis.invoice` order by total desc limit 3

/* Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money.  Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */

select billing_city, sum(total) as total_per_city from `Music_store_analysis.invoice` group by billing_city order by total_per_city desc limit 1

/* Q5: Who is the best customer? The customer who has spent the most money will be declared the best customer. Write a query that returns the person who has spent the most money.*/

select c.customer_id , c.first_name , c.last_name , sum(i.total) as total_per_customer from `Music_store_analysis.customer`  as c
join `Music_store_analysis.invoice` as i
on c.customer_id = i.customer_id
group by c.customer_id , c.first_name , c.last_name
ORDER BY total_per_customer DESC
limit 1

/* Set 2 */
/* Q1: Write query to return the email, first name, last name, & Genre of all Rock Music listeners.  Return your list ordered alphabetically by email starting with A. */

select distinct c.email , c.first_name , c.last_name from `Music_store_analysis.customer` as c
join `Music_store_analysis.invoice` as i 
on c.customer_id = i.customer_id
join `Music_store_analysis.invoice line` as il
on i.invoice_id = il.invoice_id
join `Music_store_analysis.track` as t
on il.track_id = t.track_id
where t.genre_id in (select genre_id from `Music_store_analysis.genre`
where name like "Rock")
order by c.email

/* Q2: Let's invite the artists who have written the most rock music in our dataset.  Write a query that returns the Artist name and total track count of the top 10 rock bands. */

select count(track_id) as total_track , ar.name from `Music_store_analysis.track` as t 
join `Music_store_analysis.album` as al 
on t.album_id = al.album_id
join `Music_store_analysis.artist` as ar
on al.artist_id = ar.artist_id
where genre_id in (select genre_id from `Music_store_analysis.genre`
where name like "Rock")
group by ar.name
order by total_track desc
limit 10 

/* Q3: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first. */

select name , milliseconds from `Music_store_analysis.track`
where milliseconds > (select avg(milliseconds) average_length_per_song from `Music_store_analysis.track`) 
order by milliseconds desc

/* Question Set 3 - Advance */

/* Q1: Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent */

/* Steps to Solve: First, find which artist has earned the most according to the InvoiceLines. Now use this artist to find 
which customer spent the most on this artist. For this query, you will need to use the Invoice, InvoiceLine, Track, Customer, 
Album, and Artist tables. Note, this one is tricky because the Total spent in the Invoice table might not be on a single product, 
so you need to use the InvoiceLine table to find out how many of each product was purchased, and then multiply this by the price
for each artist. */

With Best_selling_artist as
(select ar.artist_id , ar.name , sum(il.unit_price * il.quantity) as total from `Music_store_analysis.invoice line` as il
join `Music_store_analysis.track` as t on 
il.track_id = t.track_id
join `Music_store_analysis.album` as al
on t.album_id = al.album_id
join `Music_store_analysis.artist` as ar
on al.artist_id = ar.artist_id
group by 1,2
order by 3 desc
limit 1)

select c.customer_id , c.first_name , c.last_name , bsa.name , SUM(il.unit_price*il.quantity) AS amount_spent
 from `Music_store_analysis.customer` as c
join `Music_store_analysis.invoice` as i
on i.customer_id = c.customer_id
join `Music_store_analysis.invoice line` as il
on i.invoice_id = il.invoice_id
join `Music_store_analysis.track`as t
on il.track_id = t.track_id
join `Music_store_analysis.album` as al
on t.album_id = al.album_id
join Best_selling_artist as bsa 
on al.artist_id = bsa.artist_id
group by 1 , 2 , 3 , 4
order by 5 desc


/* Q2: We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre 
with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where 
the maximum number of purchases is shared return all Genres. */

/* Steps to Solve:  There are two parts in question- first most popular music genre and second need data at country level. */

  /* Method 1: Using CTE */

with popular_genre as 
(select COUNT(il.quantity) AS purchases, c.country, g.name, g.genre_id, 
row_number() over(partition by c.country order by COUNT(il.quantity) desc) as row_
 from `Music_store_analysis.customer` as c 
join `Music_store_analysis.invoice` as i 
on c.customer_id = i.customer_id
join `Music_store_analysis.invoice line` as il 
on il.invoice_id = i.invoice_id
join `Music_store_analysis.track` as t  
on il.track_id = t.track_id
join `Music_store_analysis.genre` as g
on t.genre_id = g.genre_id
GROUP BY c.country, g.name, g.genre_id
order by 2 asc ,1 desc)
select * from popular_genre where row_ = 1

/* Q3: Write a query that determines the customer that has spent the most on music for each country. Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount. */

with recursive customer_per_country as 
(select c.customer_id , c.first_name , c.last_name ,i.billing_country,  sum(i.total) as total_spending from `Music_store_analysis.customer` as c 
join `Music_store_analysis.invoice` as i  
on c.customer_id = i.customer_id
group by 1, 2, 3, 4
order by 2,3 desc),
country_max_spending as (select billing_country,MAX(total_spending) AS max_spending from 
customer_per_country group by billing_country)
select cc.billing_country, cc.total_spending, cc.first_name, cc.last_name, cc.customer_id from customer_per_country as cc 
join country_max_spending as c_max
on cc.billing_country = c_max.billing_country
where total_spending = max_spending
order by 1




